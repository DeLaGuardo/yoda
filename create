#!/usr/bin/env bash
for p in "$@"; do
  case $p in
    --image=*)
      image=${p#*=}
      ;;
    --ip=*)
      ip=${p#*=}
      ;;
    --options=*)
      options=${p#*=}
      ;;
    *)
      name=$p
      ;;
  esac
done

if [[ -z "$name" ]]; then
  echo 'Usage: '$0' [options] container-name'
  echo "Where [options] are:"
  echo "  --image"
  echo "    Docker image to use for creating current container. Default is yoda"
  echo "  --ip"
  echo "    IP address for container in subnet of docker network yodanet. Default is autoassigned by docker"
  echo "  --options"
  echo "    Optional arguments as a string to pass for docker create command"
  exit 1
fi
docker=$(cd `dirname $0` && pwd)
source "$docker/config.sh"

# Try to create image if not exists
image_count=$(docker images --filter "label=$CONTAINER_LABEL" --format '{{.ID}}')
if [[ -z "$image_count" ]]; then
  echo 'Creating base image for containers: '$CONTAINER_IMAGE
  docker build --rm=true --label $CONTAINER_LABEL -t $CONTAINER_IMAGE - < Dockerfile 
fi

image=${image-$CONTAINER_IMAGE}
if [[ -f "$image" ]]; then
  $docker/utils/import ${image%%.*} $image
fi

docker network inspect $CONTAINER_NETWORK_NAME 1>/dev/null 2>&1
if [[ "$?" != "0" ]]; then
  echo "Creating network interface $CONTAINER_NETWORK_NAME with subnet $CONTAINER_NETWORK_SUBNET"
  docker network create --subnet="$CONTAINER_NETWORK_SUBNET" $CONTAINER_NETWORK_NAME
fi

test ! -d $docker/containers && mkdir $_
init=$docker"/containers/$name"
if [[ ! -f $init ]]; then
  cp -f $docker/init $init
fi

test ! -d $docker/storage/$name && mkdir -p $_

# Make extra opts for create command depends on parameters
arg_opts=''
if [[ -n "$ip" ]]; then
  arg_opts=arg_opts' --ip "'$ip'"'
fi

docker create --name "$name" --net "$CONTAINER_NETWORK_NAME" $arg_opts --hostname "$name" --restart=always \
  -v $init:/init -v $docker/storage/$name:/home/yoda $options -it $image

